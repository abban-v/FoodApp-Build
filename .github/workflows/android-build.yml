name: Build Android Release APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Set up Node.js (use Node 20 to avoid toReversed issues)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Debug: show node & npm & npx versions and PATH
        run: |
          echo "PATH: $PATH"
          echo "which node: $(which node)"
          node -v
          npm -v
          npx --version

      - name: Clean npm cache & remove modules (fresh install)
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json
          # if you use yarn, remove yarn.lock and node_modules instead:
          # rm -rf node_modules yarn.lock

      - name: Install JS dependencies
        run: npm ci

      - name: Debug: show installed react-native / metro versions
        run: |
          echo "react-native version:"
          node -e "console.log(require('./package.json').dependencies['react-native']||require('./package.json').devDependencies['react-native'])"
          echo "metro versions (if present):"
          npm ls metro || true
          npm ls metro-config || true

      - name: Pre-bundle React Native JS for Android (using CI node)
        run: |
          mkdir -p android/app/src/main/assets
          mkdir -p android/app/src/main/res
          echo "Pre-bundle start â€” Node: $(node -v)"
          npx react-native bundle \
            --platform android \
            --dev false \
            --entry-file index.js \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res
          echo "Pre-bundle finished"

      - name: Install Android SDK / Build Tools / NDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          build-tools: 33.0.2
          ndk: 27.1.12297006

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build Release APK
        run: |
          export NODE_BINARY=$(which node)
          echo "Using NODE_BINARY: $NODE_BINARY"
          cd android
          ./gradlew clean
          ./gradlew assembleRelease --no-daemon --stacktrace

      - name: Upload Release APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk
